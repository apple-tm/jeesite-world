<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wh.js02.mapper.Js03RoleMapper">
  <resultMap id="BaseResultMap" type="com.wh.js02.entity.Js03Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <collection property="js03MenuList" javaType="java.util.ArrayList" ofType="com.wh.js02.entity.Js03Menu">
      <id column="jmid" jdbcType="INTEGER" property="id" />
      <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
      <result column="permission_value" jdbcType="VARCHAR" property="permissionValue" />
      <result column="parent_id" jdbcType="INTEGER" property="parentId" />
      <result column="type" jdbcType="INTEGER" property="type" />
      <result column="sort" jdbcType="INTEGER" property="sort" />
      <result column="status" jdbcType="INTEGER" property="status" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="create_by" jdbcType="VARCHAR" property="createBy" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_code, role_name, status, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from js03_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from js03_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wh.js02.entity.Js03Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into js03_role (role_code, role_name, status, 
      create_time, create_by, update_time, 
      update_by)
    values (#{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wh.js02.entity.Js03Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into js03_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wh.js02.entity.Js03Role">
    update js03_role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wh.js02.entity.Js03Role">
    update js03_role
    set role_code = #{roleCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--useGeneratedKeys="true" keyProperty="id"-->
  <insert id="insertRole" parameterType="com.wh.js02.entity.Js03Role" useGeneratedKeys="true" keyProperty="id">
    insert into js03_role
    (role_code, role_name, status)
    VALUES (#{roleCode}, #{roleName}, ${1})
  </insert>

  <update id="updateById" parameterType="com.wh.js02.entity.Js03Role">
    update js03_role set
    role_name = #{roleName},
    role_Code = #{roleCode}
    where id = #{id}
  </update>

  <update id="deleteById">
    update js03_role SET
    status = ${-1}
    WHERE id = #{roleId}
  </update>
  
  <select id="select" resultType="List" resultMap="BaseResultMap">
    SELECT jr2.create_by,jr2.create_time,jr2.id,jr2.role_code,jr2.role_name,
            jr2.update_by,jr2.update_time,jm.id as jmid,jm.create_by,jm.create_time,
            jm.menu_name,jm.parent_id,jm.permission_value,jm.update_by,jm.update_time
    from
        (SELECT jr.create_by,jr.create_time,jr.id,jr.role_code,jr.role_name,
        jr.update_by,jr.update_time
        FROM js03_role AS jr where status = ${1} limit #{offset},#{pageSize}) jr2

        LEFT JOIN js03_role_menu AS jrm
        ON jr2.id = jrm.role_id
        LEFT JOIN js03_menu AS jm
        ON jrm.menu_id = jm.

  </select>

  <select id="fuzzyQuery" resultType="List" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from js03_role
    where
    role_name like concat('%',#{searchKey},'%')
    or role_code like concat('%', #{searchKey},'%')
    and status = ${1}
  </select>





</mapper>